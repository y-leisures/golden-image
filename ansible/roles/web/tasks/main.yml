---
- name: "start docker setting"
  debug:

- name: Add the user 'nginx'
  user:
    name: nginx
    groups:
    - ubuntu
    - staff
    shell: /usr/sbin/nologin

- name: Install docker, docker-compose packages
  become: true
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - nginx
    - awscli
    - systemd-coredump

# NOTE: Now working
- import_tasks: setup-docker-v2.yml

- name: Add ubuntu to docker group
  user:
    # name: "{{ ansible_user }}"
    name: "ubuntu"
    groups:
      - docker
    append: yes

- name: reset ssh connection to allow user changes to affect 'current login user'
  meta: reset_connection

# Docker pull
# NOTE: Docker images are not mandatory for golden-images
#- name: pull mysql image
#  community.general.docker_image:
#    name: "{{ item.image }}"
#    tag: "{{ item.tag }}"
#    source: pull
#  with_items:
#    - { image: 'mysql', tag: '5.6'}
#    - { image: 'php', tag: '5.6-apache'}
#    - { image: 'php', tag: '7.3-apache'}

#- name: pull bms application image
#  community.general.docker_image:
#    name: "{{ item.image }}"
#    tag: "{{ item.tag }}"
#    source: pull
#  with_items:
#    - { image: '{{ web_container_image }}', tag: '{{ web_container_tag }}'}

# Tasks for Docker-compose
# NOTE: Task for the start-at-task option
# e.g: ansible-playbook -i inventory/web.yml --diff --start-at-task="start bms setting" main_playbook.yml
#- name: "start bms setting"
#  debug:

- name: Create directories for docker-compose
  file:
    path: "{{ item.directory_name }}"
    state: directory
    owner: ubuntu
    group: staff
    mode: 0755
    recurse: no
  with_items:
    - {directory_name: '/opt/bms/' }
    - {directory_name: '/opt/bms/db' }
    - {directory_name: '/opt/bms/nginx' }

- name: Create directories for the mysql container
  file:
    path: "{{ item.directory_name }}"
    state: directory
    owner: systemd-coredump
    group: staff
    mode: 0755
    recurse: no
  with_items:
    - {directory_name: '/opt/bms/db/mysql_data' }

- name: Create directories for docker-compose with permission free
  file:
    path: "{{ item.directory_name }}"
    state: directory
    owner: ubuntu
    group: staff
    mode: 0777
    recurse: no
  with_items:
    - {directory_name: '/opt/bms/log' }
    - {directory_name: '/opt/bms/log/nginx' }
    - {directory_name: '/opt/bms/cache' }
    - {directory_name: '/opt/bms/cache/twig' }

# Nginx container
- name: Put nginx stuffs
  template:
    src:   "{{ item.src_name }}"
    dest:  "{{ item.dest_name }}"
    owner: ubuntu
    group: ubuntu
    mode:  0664
    backup: true
  with_items:
    - {src_name: 'Dockerfile.nginx.j2', dest_name: '/opt/bms/nginx/Dockerfile.nginx' }
    - {src_name: 'nginx.conf.j2', dest_name: '/opt/bms/nginx/nginx.conf' }

- name: Put /opt/bms/docker-compose.yml
  template:
    src:   docker-compose.yml.j2
    dest:  /opt/bms/docker-compose.yml
    owner: ubuntu
    group: ubuntu
    mode:  0644
    backup: true
  notify: "restart bms.service"

- name: Put /etc/systemd/system/docker-compose.service
  template:
    src:   bms.service.j2
    dest:  /etc/systemd/system/bms.service
    owner: ubuntu
    group: ubuntu
    mode:  0644
    backup: true
  # notify: "restart bms.service"

- name: Stop nginx.service # NOTE: We use the nginx container instead.
  systemd:
    name:    nginx.service
    state:   stopped
    enabled: no

# - name: Start bms.service
#   systemd:
#     name:    bms.service
#     state:   started
#     enabled: yes
#   notify: "restart bms.service"
